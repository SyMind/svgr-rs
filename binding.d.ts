/* tslint:disable */
/* eslint-disable */

/* auto-generated by NAPI-RS */

export interface Caller {
  name?: string
  previousExport?: string
}
/** The state linked to the transformation. */
export interface State {
  /** The name of the file that is generated, mainly used to find runtime config file to apply. */
  filePath?: string
  /** The name of the component that will be used in the generated component. */
  componentName?: string
  /**
   * If you create a tool based on SVGR, it is always better to specify `state.caller`.
   * It permits the inter-operability betweens plugins.
   * If someone create a SVGR plugin it could adapt it specifically to your tool.
   */
  caller?: Caller
}
export interface TransformOutput {
  code: string
  map?: string
  output?: string
}
export interface JsCaller {
  name?: string
  previousExport?: string
}
export interface JsState {
  filePath?: string
  componentName?: string
  caller?: JsCaller
}
export declare function transform(code: string, config: Buffer, jsState?: JsState | undefined | null): Promise<string>
